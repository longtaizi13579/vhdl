|pill_music
green <= setting:inst.green
QD => setting:inst.QD
1HZ => setting:inst.CLK
1HZ => music_reader:inst1.CLK
100KHZ => setting:inst.CLKF
100KHZ => ElectricPiano:inst2.clk
start => setting:inst.START
clear => setting:inst.clear
state_input[0] => setting:inst.state_input[0]
state_input[1] => setting:inst.state_input[1]
state_input[2] => setting:inst.state_input[2]
yellow <= setting:inst.yellow
test <= setting:inst.test
speaker <= ElectricPiano:inst2.speaker
red <= setting:inst.red
h1[0] <= setting:inst.h1[0]
h1[1] <= setting:inst.h1[1]
h1[2] <= setting:inst.h1[2]
h1[3] <= setting:inst.h1[3]
h2[0] <= setting:inst.h2[0]
h2[1] <= setting:inst.h2[1]
h2[2] <= setting:inst.h2[2]
h2[3] <= setting:inst.h2[3]
l1[0] <= setting:inst.l1[0]
l1[1] <= setting:inst.l1[1]
l1[2] <= setting:inst.l1[2]
l1[3] <= setting:inst.l1[3]
l2[0] <= setting:inst.l2[0]
l2[1] <= setting:inst.l2[1]
l2[2] <= setting:inst.l2[2]
l2[3] <= setting:inst.l2[3]
m1[0] <= setting:inst.m1[0]
m1[1] <= setting:inst.m1[1]
m1[2] <= setting:inst.m1[2]
m1[3] <= setting:inst.m1[3]


|pill_music|setting:inst
QD => sel_set_total_pill_h.DATAB
QD => sel_set_total_pill_m.DATAB
QD => sel_set_total_pill_l.DATAB
QD => sel_set_pil_per_bot_h.DATAB
QD => sel_set_pil_per_bot_l.DATAB
CLK => h1.IN0
CLK => h1.IN1
CLK => m1.IN1
CLK => l1.IN1
CLK => h2.IN1
CLK => l2.IN1
CLK => clk1.CLK
CLKF => state[0].CLK
CLKF => state[1].CLK
CLKF => state[2].CLK
START => finish.IN0
START => alarm_temp.OUTPUTSELECT
START => alarm_temp.OUTPUTSELECT
START => working.OUTPUTSELECT
START => working.DATAIN
clear => finish.OUTPUTSELECT
clear => alarm_temp.DATAA
clear => working.DATAA
state_input[0] => state[0].DATAIN
state_input[1] => state[1].DATAIN
state_input[2] => state[2].DATAIN
red <= alarm_temp.DB_MAX_OUTPUT_PORT_TYPE
green <= green.DB_MAX_OUTPUT_PORT_TYPE
yellow <= finish.DB_MAX_OUTPUT_PORT_TYPE
h1[0] <= h1.DB_MAX_OUTPUT_PORT_TYPE
h1[1] <= h1.DB_MAX_OUTPUT_PORT_TYPE
h1[2] <= h1.DB_MAX_OUTPUT_PORT_TYPE
h1[3] <= h1.DB_MAX_OUTPUT_PORT_TYPE
m1[0] <= m1.DB_MAX_OUTPUT_PORT_TYPE
m1[1] <= m1.DB_MAX_OUTPUT_PORT_TYPE
m1[2] <= m1.DB_MAX_OUTPUT_PORT_TYPE
m1[3] <= m1.DB_MAX_OUTPUT_PORT_TYPE
l1[0] <= l1.DB_MAX_OUTPUT_PORT_TYPE
l1[1] <= l1.DB_MAX_OUTPUT_PORT_TYPE
l1[2] <= l1.DB_MAX_OUTPUT_PORT_TYPE
l1[3] <= l1.DB_MAX_OUTPUT_PORT_TYPE
h2[0] <= h2.DB_MAX_OUTPUT_PORT_TYPE
h2[1] <= h2.DB_MAX_OUTPUT_PORT_TYPE
h2[2] <= h2.DB_MAX_OUTPUT_PORT_TYPE
h2[3] <= h2.DB_MAX_OUTPUT_PORT_TYPE
l2[0] <= l2.DB_MAX_OUTPUT_PORT_TYPE
l2[1] <= l2.DB_MAX_OUTPUT_PORT_TYPE
l2[2] <= l2.DB_MAX_OUTPUT_PORT_TYPE
l2[3] <= l2.DB_MAX_OUTPUT_PORT_TYPE
test <= test~reg0.DB_MAX_OUTPUT_PORT_TYPE


|pill_music|ElectricPiano:inst2
clk => spks.CLK
clk => time1[0].CLK
clk => time1[1].CLK
clk => time1[2].CLK
clk => time1[3].CLK
clk => time1[4].CLK
clk => time1[5].CLK
clk => time1[6].CLK
clk => time1[7].CLK
tone[0] => Mux0.IN10
tone[0] => Mux1.IN10
tone[0] => Mux2.IN10
tone[0] => Mux3.IN10
tone[0] => Mux4.IN10
tone[0] => Mux5.IN10
tone[0] => Mux6.IN10
tone[0] => Mux7.IN10
tone[1] => Mux0.IN9
tone[1] => Mux1.IN9
tone[1] => Mux2.IN9
tone[1] => Mux3.IN9
tone[1] => Mux4.IN9
tone[1] => Mux5.IN9
tone[1] => Mux6.IN9
tone[1] => Mux7.IN9
tone[2] => Mux0.IN8
tone[2] => Mux1.IN8
tone[2] => Mux2.IN8
tone[2] => Mux3.IN8
tone[2] => Mux4.IN8
tone[2] => Mux5.IN8
tone[2] => Mux6.IN8
tone[2] => Mux7.IN8
speaker <= spks.DB_MAX_OUTPUT_PORT_TYPE


|pill_music|music_reader:inst1
CLK => count[0].CLK
CLK => count[1].CLK
CLK => count[2].CLK
CLK => count[3].CLK
start => flag.CLK
tone[0] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[1] <= tone.DB_MAX_OUTPUT_PORT_TYPE
tone[2] <= Equal7.DB_MAX_OUTPUT_PORT_TYPE


