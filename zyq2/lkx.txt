LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
USE IEEE.STD_LOGIC_UNSIGNED.ALL;
entity test is
port(clk:in std_logic;
l:out std_logic_vector(7 downto 1)
);
end test;

architecture tube of test is

	signal count:std_logic_vector(3 downto 0):="0000";

--variable
	type BitVec8 is array(7 downto 0) of std_logic;
	variable hour, min, second : BitVec8 := "00000000";
	variable c0, c1, c2: std_logic := '0';
	variable hourBCD, minBCD, secondBCD : BitVe8;
	variable timearray is array(23 downto 0) of std_logic;
	
--component declar
	component CTR60
		PORT(
			CLK : IN STD_LOGIC;
			Q   : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
			C   : OUT STD_LOGIC);
	END component;
	component CTR24 IS
		PORT(
			CLK : IN STD_LOGIC;
			Q   : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
			C   : OUT STD_LOGIC);
	END component;
	component DECODER38 IS
    PORT(
        Ax : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
        Yx : OUT STD_LOGIC_VECTOR(7 DOWNTO 0));
	END component;

begin

--port map
	u1: CTR24 port map(clk, hour, c0);
	u2: CTR60 port map(clk, min, c1);
	u3: CTR60 port map(clk, second, c2);
	timearray = hour & min & second;
	
	p1:process(clk)
	begin
	if(clk'event and clk='1')then
		if(count="1001")then
		count<="0000";
		else
		count<=count+'1';
		end if;
	end if;
end process p1;

	p2:process(count)
	begin
	if(count="0000")then 
		l<="1111110";
	elsif(count="0001")then 
		l<="0110000";
	elsif(count="0010")then
		l<="1101101";
	elsif(count="0011")then
			l<="1111001";
	elsif(count="0100")then
	l<="0110011";
	elsif(count="0101")then
	l<="1011011";
	elsif(count="0110")then
	l<="1011111";
	elsif(count="0111")then
	l<="1110000";
	elsif(count="1000")then
	l<="1111111";
	elsif(count="1001")then
	l<="1111011";
	end if;
	end process p2;
	
	p3: process(timearray)
	begin
	i = 23;
	while(i > 4)loop

		i = i - 4;
	end loop;
	end process;
	
end tube;
